      PROGRAM C312
      DOUBLE PRECISION DX
      DIMENSION FNAME(8),XX(6)
      DATA (FNAME=5HJ0(X),5HJ1(X),5HY0(X),5HY1(X),5HI0(X),5HI1(X),
     1 5HK0(X),5HK1(X))
      DATA XX /-1000.0,-10.0,-1.0,1.0,10.0,1000.0/
      NFIGUR(U,V)=MIN0(12,IABS(INT(ALOG10(AMAX1(1.0E-12,ABS(U))))-
     1                         INT(ALOG10(AMAX1(1.0E-12,ABS(V))))))
      PRINT 10
      PRINT 9
      DO 5 I = 1,21
      X=I-1
      BJ0P=BESJ0(X)
      BJ1P=BESJ1(X)
      BI0P=BESI0(X)
      BI1P=BESI1(X)
      BJ0M=BESJ0(-X)
      BJ1M=BESJ1(-X)
      BI0M=BESI0(-X)
      BI1M=BESI1(-X)
    5 PRINT 15, X,BJ0P,BJ0M,BJ1P,BJ1M,BI0P,BI0M,BI1P,BI1M
      PRINT 16
      DO 6 I = 1,175
      IF(MOD(I,5) .EQ. 0) PRINT 8
      X=0.1*FLOAT(I)
      BJ0=BESJ0(X)
      BJ1=BESJ1(X)
      BY0=BESY0(X)
      BY1=BESY1(X)
    6 PRINT 17, X,BJ0,BJ1,BY0,BY1
      PRINT 18
      DO 7 I = 1,100
      IF(MOD(I,5) .EQ. 0) PRINT 8
      X=0.1*FLOAT(I)
      BI0=EBESI0(X)
      BI1=EBESI1(X)
      BK0=EBESK0(X)
      BK1=EBESK1(X)
      PRINT 19, X,BI0,BI1,BK0,BK1
    7 CONTINUE
      PRINT 8
      DO 1 I = 1,6
      X=XX(I)
      BK0=0.
      BK1=0.
      BI0=EBESI0(X)
      BI1=EBESI1(X)
      IF(X .LT. 0.0) GO TO 2
      BK0=EBESK0(X)
      BK1=EBESK1(X)
    2 PRINT 19, X,BI0,BI1,BK0,BK1
    1 CONTINUE
   49 DO 50 J = 1,8
      PRINT 70, FNAME(J)
      DO 51 I = 1,14
      DX=10.0**(I-15)
      X=DX
      CALL ALLBES(DX,SP,DP,DD,J)
      ND=NFIGUR(DP,DD)
   51 PRINT 61, X,SP,DP,ND
      PRINT 70, FNAME(J)
      DO 52 I = 1,10
      DX=FLOAT(I)/10.0
      X=DX
      CALL ALLBES(DX,SP,DP,DD,J)
      ND=NFIGUR(DP,DD)
   52 PRINT 62, X,SP,DP,ND
      PRINT 70, FNAME(J)
      DO 53 I=1,100
      DX=I
      X=DX
      CALL ALLBES(DX,SP,DP,DD,J)
      ND=NFIGUR(DP,DD)
   53 PRINT 63, X,SP,DP,ND
      IF(J.EQ.5.OR.J.EQ.6) GO TO 50
      PRINT 70, FNAME(J)
      DO 54 I = 2,9
      DX=10.0**I
      X=DX
      CALL ALLBES(DX,SP,DP,DD,J)
      ND=NFIGUR(DP,DD)
   54 PRINT 64, X,SP,DP,ND
   50 CONTINUE
      PRINT 8
      B=BESY0(0.0)
      B=BESY1(0.0)
      B=BESK0(0.0)
      B=BESK1(0.0)
      B=EBESK0(0.0)
      B=EBESK1(0.0)
    8 FORMAT(5X)
    9 FORMAT(1H1/////
     1  60H     X         J0(X)       J0(-X)        J1(X)       J1(-X) ,
     2  60H      I0(X)        I0(-X)        I1(X)       I1(-X)
     3  /////)
  10  FORMAT(//30X,31HTEST C312     AND     TEST C313/)
   15 FORMAT(5XF5.0,8E13.4)
   16 FORMAT(1H1///
     1  60H            X                 J0(X)               J1(X)     ,
     2  60H          Y0(X)               Y1(X)
     3  //)
  17  FORMAT(5X,F8.1,F22.11,3F20.10)
   18 FORMAT(1H1///
     1  60H              X  EXP(-ABS(X))*I0(X)  EXP(-ABS(X))*I1(X)     ,
     2  60H   EXP(X)*K0(X)        EXP(X)*K1(X)
     3  //)
   19 FORMAT(5XF10.1,4F20.10)
   61 FORMAT(5XE8.1,2E30.11,I8)
   62 FORMAT(5XF8.1,2E30.11,I8)
   63 FORMAT(5XF8.1,2E30.11,I8)
   64 FORMAT(5XE8.1,2E30.11,I8)
   70 FORMAT(1H1//10XA5/10X5H=====//
     1  60H            X                 TEST - RESULT                 ,
     2  60H EXACT  VALUE CORR DIGITS
     3 //)
      END
      SUBROUTINE ALLBES (DX,SP,DP,DD,J)
      DOUBLE PRECISION DX,DJN,DYN,DIN,DKN
      X=DX
      GO TO (1,2,3,4,5,6,7,8), J
    1 SP=BESJ0(X)
      DP=DJN(DX,0)
      GO TO 10
    2 SP=BESJ1(X)
      DP=DJN(DX,1)
      GO TO 10
    3 SP=BESY0(X)
      DP=DYN(DX,0)
      GO TO 10
    4 SP=BESY1(X)
      DP=DYN(DX,1)
      GO TO 10
    5 SP=BESI0(X)
      DP=DIN(DX,0)
      GO TO 10
    6 SP=BESI1(X)
      DP=DIN(DX,1)
      GO TO 10
    7 SP=BESK0(X)
      DP=DKN(DX,0)
      GO TO 10
    8 SP=BESK1(X)
      DP=DKN(DX,1)
   10 DD=SP-DP
      RETURN
      END
      DOUBLE PRECISION FUNCTION DBES (XX,N)
      EXTERNAL FKN
      COMMON /FORKN/ NKN,XKN
      DOUBLE PRECISION X,XCUT,F,G,H,S,DK1,DK2,DK3,DK4,EPS,GP,GQ,P,Q,XI,
     1                 DPI,D2PI,DPID2,D2DPI,H1,G1,S1,SIGN,SIGN1,XX
      DOUBLE PRECISION DFACT( 80),DPSI( 80)
      DATA (XCUT=20.D0),(EPS=1.0D-15),
     1     (DPI=3.1415 92653 58979 32384 62643 383D0),
     2     (D2PI=6.2831 85307 17958 64769 25286 766D0),
     3     (DPID2=1.5707 96326 79489 66192 31321 692D0),
     4     (D2DPI=0.6366 19772 36758 13430 75535 054D0)
      DATA (DFACT(  1) =             1.0000000000000000000000000000D+00)
      DATA (DFACT(  2) =             2.0000000000000000000000000000D+00)
      DATA (DFACT(  3) =             6.0000000000000000000000000000D+00)
      DATA (DFACT(  4) =             2.4000000000000000000000000000D+01)
      DATA (DFACT(  5) =             1.2000000000000000000000000000D+02)
      DATA (DFACT(  6) =             7.2000000000000000000000000000D+02)
      DATA (DFACT(  7) =             5.0400000000000000000000000000D+03)
      DATA (DFACT(  8) =             4.0320000000000000000000000000D+04)
      DATA (DFACT(  9) =             3.6288000000000000000000000000D+05)
      DATA (DFACT( 10) =             3.6288000000000000000000000000D+06)
      DATA (DFACT( 11) =             3.9916800000000000000000000000D+07)
      DATA (DFACT( 12) =             4.7900160000000000000000000000D+08)
      DATA (DFACT( 13) =             6.2270208000000000000000000000D+09)
      DATA (DFACT( 14) =             8.7178291200000000000000000000D+10)
      DATA (DFACT( 15) =             1.3076743680000000000000000000D+12)
      DATA (DFACT( 16) =             2.0922789888000000000000000000D+13)
      DATA (DFACT( 17) =             3.5568742809600000000000000000D+14)
      DATA (DFACT( 18) =             6.4023737057280000000000000000D+15)
      DATA (DFACT( 19) =             1.2164510040883200000000000000D+17)
      DATA (DFACT( 20) =             2.4329020081766400000000000000D+18)
      DATA (DFACT( 21) =             5.1090942171709440000000000000D+19)
      DATA (DFACT( 22) =             1.1240007277776076800000000000D+21)
      DATA (DFACT( 23) =             2.5852016738884976640000000000D+22)
      DATA (DFACT( 24) =             6.2044840173323943936000000000D+23)
      DATA (DFACT( 25) =             1.5511210043330985984000000000D+25)
      DATA (DFACT( 26) =             4.0329146112660563558400000000D+26)
      DATA (DFACT( 27) =             1.0888869450418352160768000000D+28)
      DATA (DFACT( 28) =             3.0488834461171386050150400000D+29)
      DATA (DFACT( 29) =             8.8417619937397019545436160000D+30)
      DATA (DFACT( 30) =             2.6525285981219105863630848000D+32)
      DATA (DFACT( 31) =             8.2228386541779228177255628800D+33)
      DATA (DFACT( 32) =             2.6313083693369353016721801216D+35)
      DATA (DFACT( 33) =             8.6833176188118864955181944013D+36)
      DATA (DFACT( 34) =             2.9523279903960414084761860964D+38)
      DATA (DFACT( 35) =             1.0333147966386144929666651337D+40)
      DATA (DFACT( 36) =             3.7199332678990121746799944814D+41)
      DATA (DFACT( 37) =             1.3763753091226345046315979581D+43)
      DATA (DFACT( 38) =             5.2302261746660111176000722407D+44)
      DATA (DFACT( 39) =             2.0397882081197443358640281738D+46)
      DATA (DFACT( 40) =             8.1591528324789773434561126950D+47)
      DATA (DFACT( 41) =             3.3452526613163807108170062048D+49)
      DATA (DFACT( 42) =             1.4050061177528798985431426060D+51)
      DATA (DFACT( 43) =             6.0415263063373835637355132058D+52)
      DATA (DFACT( 44) =             2.6582715747884487680436258105D+54)
      DATA (DFACT( 45) =             1.1962222086548019456196316147D+56)
      DATA (DFACT( 46) =             5.5026221598120889498503054277D+57)
      DATA (DFACT( 47) =             2.5862324151116818064296435509D+59)
      DATA (DFACT( 48) =             1.2413915592536072670862289044D+61)
      DATA (DFACT( 49) =             6.0828186403426756087225216317D+62)
      DATA (DFACT( 50) =             3.0414093201713378043612608159D+64)
      DATA (DFACT( 51) =             1.5511187532873822802242430161D+66)
      DATA (DFACT( 52) =             8.0658175170943878571660636834D+67)
      DATA (DFACT( 53) =             4.2748832840600255642980137522D+69)
      DATA (DFACT( 54) =             2.3084369733924138047209274262D+71)
      DATA (DFACT( 55) =             1.2696403353658275925965100844D+73)
      DATA (DFACT( 56) =             7.1099858780486345185404564722D+74)
      DATA (DFACT( 57) =             4.0526919504877216755680601891D+76)
      DATA (DFACT( 58) =             2.3505613312828785718294749097D+78)
      DATA (DFACT( 59) =             1.3868311854568983573793901967D+80)
      DATA (DFACT( 60) =             8.3209871127413901442763411801D+81)
      DATA (DFACT( 61) =             5.0758021387722479880085681198D+83)
      DATA (DFACT( 62) =             3.1469973260387937525653122343D+85)
      DATA (DFACT( 63) =             1.9826083154044400641161467075D+87)
      DATA (DFACT( 64) =             1.2688693218588416410343338928D+89)
      DATA (DFACT( 65) =             8.2476505920824706667231703033D+90)
      DATA (DFACT( 66) =             5.4434493907744306400372924001D+92)
      DATA (DFACT( 67) =             3.6471110918188685288249859080D+94)
      DATA (DFACT( 68) =             2.4800355424368305996009904174D+96)
      DATA (DFACT( 69) =             1.7112245242814131137246833880D+98)
      DATA (DFACT( 70) =             1.1978571669969891796072783716D100)
      DATA (DFACT( 71) =             8.5047858856786231752116764382D101)
      DATA (DFACT( 72) =             6.1234458376886086861524070354D103)
      DATA (DFACT( 73) =             4.4701154615126843408912571358D105)
      DATA (DFACT( 74) =             3.3078854415193864122595302804D107)
      DATA (DFACT( 75) =             2.4809140811395398091946477103D109)
      DATA (DFACT( 76) =             1.8854947016660502549879322598D111)
      DATA (DFACT( 77) =             1.4518309202828586963407078401D113)
      DATA (DFACT( 78) =             1.1324281178206297831457521152D115)
      DATA (DFACT( 79) =             8.9461821307829752868514417100D116)
      DATA (DFACT( 80) =             7.1569457046263802294811533680D118)
      DATA (DPSI (  1) =            -0.5772156649015328606065120901D-00)
      DATA (DPSI (  2) =             4.2278433509846713939348790991D-01)
      DATA (DPSI (  3) =             9.2278433509846713939348790991D-01)
      DATA (DPSI (  4) =             1.2561176684318004727268212432D+00)
      DATA (DPSI (  5) =             1.5061176684318004727268212432D+00)
      DATA (DPSI (  6) =             1.7061176684318004727268212432D+00)
      DATA (DPSI (  7) =             1.8727843350984671393934879098D+00)
      DATA (DPSI (  8) =             2.0156414779556099965363450527D+00)
      DATA (DPSI (  9) =             2.1406414779556099965363450527D+00)
      DATA (DPSI ( 10) =             2.2517525890667211076474561638D+00)
      DATA (DPSI ( 11) =             2.3517525890667211076474561637D+00)
      DATA (DPSI ( 12) =             2.4426616799758120167383652546D+00)
      DATA (DPSI ( 13) =             2.5259950133091453500716985879D+00)
      DATA (DPSI ( 14) =             2.6029180902322222731486216648D+00)
      DATA (DPSI ( 15) =             2.6743466616607937017200502362D+00)
      DATA (DPSI ( 16) =             2.7410133283274603683867169028D+00)
      DATA (DPSI ( 17) =             2.8035133283274603683867169028D+00)
      DATA (DPSI ( 18) =             2.8623368577392250742690698439D+00)
      DATA (DPSI ( 19) =             2.9178924132947806298246253994D+00)
      DATA (DPSI ( 20) =             2.9705239922421490508772569783D+00)
      DATA (DPSI ( 21) =             3.0205239922421490508772569783D+00)
      DATA (DPSI ( 22) =             3.0681430398611966699248760259D+00)
      DATA (DPSI ( 23) =             3.1135975853157421244703305713D+00)
      DATA (DPSI ( 24) =             3.1570758461853073418616349191D+00)
      DATA (DPSI ( 25) =             3.1987425128519740085283015857D+00)
      DATA (DPSI ( 26) =             3.2387425128519740085283015856D+00)
      DATA (DPSI ( 27) =             3.2772040513135124700667631241D+00)
      DATA (DPSI ( 28) =             3.3142410883505495071038001610D+00)
      DATA (DPSI ( 29) =             3.3499553740648352213895144467D+00)
      DATA (DPSI ( 30) =             3.3844381326855248765619282398D+00)
      DATA (DPSI ( 31) =             3.4177714660188582098952615731D+00)
      DATA (DPSI ( 32) =             3.4500295305349872421533260892D+00)
      DATA (DPSI ( 33) =             3.4812795305349872421533260892D+00)
      DATA (DPSI ( 34) =             3.5115825608380175451836291195D+00)
      DATA (DPSI ( 35) =             3.5409943255438998981248055900D+00)
      DATA (DPSI ( 36) =             3.5695657541153284695533770185D+00)
      DATA (DPSI ( 37) =             3.5973435318931062473311547962D+00)
      DATA (DPSI ( 38) =             3.6243705589201332743581818232D+00)
      DATA (DPSI ( 39) =             3.6506863483938174848844976126D+00)
      DATA (DPSI ( 40) =             3.6763273740348431259101386383D+00)
      DATA (DPSI ( 41) =             3.7013273740348431259101386382D+00)
      DATA (DPSI ( 42) =             3.7257176179372821503003825406D+00)
      DATA (DPSI ( 43) =             3.7495271417468059598241920644D+00)
      DATA (DPSI ( 44) =             3.7727829557002943319172153201D+00)
      DATA (DPSI ( 45) =             3.7955102284275670591899425929D+00)
      DATA (DPSI ( 46) =             3.8177324506497892814121648150D+00)
      DATA (DPSI ( 47) =             3.8394715810845718901078169889D+00)
      DATA (DPSI ( 48) =             3.8607481768292527411716467762D+00)
      DATA (DPSI ( 49) =             3.8815815101625860745049801095D+00)
      DATA (DPSI ( 50) =             3.9019896734278921969539597013D+00)
      DATA (DPSI ( 51) =             3.9219896734278921969539597012D+00)
      DATA (DPSI ( 52) =             3.9415975165651470989147440149D+00)
      DATA (DPSI ( 53) =             3.9608282857959163296839747841D+00)
      DATA (DPSI ( 54) =             3.9796962103242182164764276143D+00)
      DATA (DPSI ( 55) =             3.9982147288427367349949461327D+00)
      DATA (DPSI ( 56) =             4.0163965470245549168131279508D+00)
      DATA (DPSI ( 57) =             4.0342536898816977739559850936D+00)
      DATA (DPSI ( 58) =             4.0517975495308205809735289533D+00)
      DATA (DPSI ( 59) =             4.0690389288411654085597358497D+00)
      DATA (DPSI ( 60) =             4.0859880813835382899156680530D+00)
      DATA (DPSI ( 61) =             4.1026547480502049565823347196D+00)
      DATA (DPSI ( 62) =             4.1190481906731557762544658670D+00)
      DATA (DPSI ( 63) =             4.1351772229312202923834981251D+00)
      DATA (DPSI ( 64) =             4.1510502388042361653993711409D+00)
      DATA (DPSI ( 65) =             4.1666752388042361653993711409D+00)
      DATA (DPSI ( 66) =             4.1820598541888515500147557561D+00)
      DATA (DPSI ( 67) =             4.1972113693403667015299072712D+00)
      DATA (DPSI ( 68) =             4.2121367424746950597388624950D+00)
      DATA (DPSI ( 69) =             4.2268426248276362362094507302D+00)
      DATA (DPSI ( 70) =             4.2413353784508246420065521794D+00)
      DATA (DPSI ( 71) =             4.2556210927365389277208378936D+00)
      DATA (DPSI ( 72) =             4.2697055997787924488475984569D+00)
      DATA (DPSI ( 73) =             4.2835944886676813377364873458D+00)
      DATA (DPSI ( 74) =             4.2972931188046676391063503595D+00)
      DATA (DPSI ( 75) =             4.3108066323181811526198638728D+00)
      DATA (DPSI ( 76) =             4.3241399656515144859531972060D+00)
      DATA (DPSI ( 77) =             4.3372978603883565912163551008D+00)
      DATA (DPSI ( 78) =             4.3502848733753695782293421137D+00)
      DATA (DPSI ( 79) =             4.3631053861958823987421626265D+00)
      DATA (DPSI ( 80) =             4.3757636140439836645649474365D+00)
      ENTRY DJN
      X=DABS(XX)
      LABEL=1
      SIGN=-1.D0
      IF(X .GT. XCUT) GO TO 1
   28 NF=MAX0(N,1)
      F=0.5D0*X
      H=SIGN*F**2
      G=1.D0
      S=G
      K=-1
    2 K=K+1
      IF(K .GT. 50) GO TO 5
      DK1=(K+1)*(K+N+1)
      G= G*H/DK1
      S=S+G
      IF(DABS(G) .GE. EPS) GO TO 2
    5 DBES=S*(DSIGN(1.D0,XX)*F)**N/DFACT(NF)
      RETURN
    1 MU=4*N**2
      F=8.D0*X
      H=1.D0/F**2
      GP=1.D0
      GQ=1.D0
      P=GP
      Q=GQ
      K=-1
    4 K=K+1
      IF(K .GT. 50) GO TO 53
      K2=2*K
      K4=4*K
      DK1=(MU-(K4+1)**2)*(MU-(K4+3)**2)
      DK2=(K2+1)*(K2+2)
      DK3=(MU-(K4+3)**2)*(MU-(K4+5)**2)
      DK4=(K2+2)*(K2+3)
      GP=-GP*H*DK1/DK2
      GQ=-GQ*H*DK3/DK4
      P=P+GP
      Q=Q+GQ
      IF(DABS(GP) .GE. EPS .OR. DABS(GQ) .GE. EPS) GO TO 4
   53 Q=Q*FLOAT(MU-1)/F
      XI=X-(FLOAT(N)+.5D0)*DPID2
      GO TO (51,52) ,LABEL
   51 DBES=DSQRT(D2DPI/X)*(P*DCOS(XI)-Q*DSIN(XI))*DSIGN(1.D0,XX)**N
      RETURN
   52 DBES=DSQRT(D2DPI/X)*(Q*DCOS(XI)+P*DSIN(XI))
      RETURN

      ENTRY DYN
      IF(XX .LE. 0.D0) GO TO 100
      X=XX
      LABEL=2
      IF(X .GT. XCUT) GO TO 1
      SIGN1=+1.0D0
      SIGN=-1.D0
   29 NF=MAX0(N,1)
      F=.5D0*X
      H=SIGN*F**2
      H1=SIGN1*F**2
      FLN=2.D0*DLOG(F)
      G=FLN-DPSI(1)-DPSI(N+1)
      G1=1.0D0
      S=G
      S1=G1
      IF(N .EQ. 0) S1=0.0D0
      K=-1
   22 K=K+1
      IF(K .GT. 50) GO TO 27
      DK1=(K+1)*(N+K+1)
      K1=K+1
      K2=N+K+1
      G= (G*H/DK1)*(FLN-DPSI(K1+1)-DPSI(K2+1))/(FLN-DPSI(K1)-DPSI(K2))
      S=S+G
      IF(DABS(G) .GE. EPS) GO TO 22
   27 K=-1
   26 K=K+1
      IF(K .GE. N-1) GO TO 25
      DK1=(K+1)*(N-K-1)
      G1=G1*H1/DK1
      S1=S1+G1
      GO TO 26
   25 IF(SIGN .GT. 0.D0) GO TO 31
      DBES=(-S1/F**N+S*F**N/DFACT(NF))/DPI
      RETURN
   31 DBES=(S1/F**N-S*(-F)**N/DFACT(NF))/2.0D0
      RETURN

      ENTRY DIN
      IF(XX.GE.43.7) GO TO 100
      X=DABS(XX)
      SIGN=+1.0D0
      IF(X .LE. XCUT) GO TO 28
      SIGN1=-1.0D0
    3 MU=4*N**2
      H=SIGN1*0.125D0/X
      G=1.0D0
      S=G
      K=-1
    8 K=K+1
      IF(K .GT. 50) GO TO 32
      DK1=MU-(2*K+1)**2
      DK2=K+1
      G= G*H*DK1/DK2
      S=S+G
      IF(DABS(G) .GE. EPS) GO TO 8
   32 IF(SIGN1 .GT. 0.D0) GO TO 30
      DBES=DSIGN(1.D0,XX)**N*S*DEXP(X)/DSQRT(D2PI*X)
      RETURN
   30 DBES=S*DSQRT(DPID2/X)*DEXP(DMAX1(-X,-675.81D0))
      RETURN
      ENTRY DKN
      IF(XX.GE.43.7) GO TO 100
      IF(XX .LE. 0.D0) GO TO 100
      X=XX
      SIGN=+1.0D0
      SIGN1=-1.0D0
      IF(X .LE. 4.D0) GO TO 29
      SIGN1=+1.0D0
      IF(X .GT. XCUT) GO TO 3
      NKN=N
      XKN=X
      DBES=GAUSS (FKN,0.,3.5,10.0**(-INT(XKN)/2-12))
      RETURN

  100 DBES=0.0D0
      RETURN
      END
      FUNCTION FKN(T)
      COMMON /FORKN/ NKN,XKN
      ET=EXP(T)
      COSHT=0.5*(ET+1.0/ET)
      FKN=EXP(-XKN*COSHT)
      IF(NKN .EQ. 0) RETURN
      FKN=FKN*COSHT
      RETURN
      END
*EXECUTE
*
*
